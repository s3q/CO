@mixin make-bn($bgc, $color, $p, $fos, $bo-radius, $cursor, $outline-foucs) {
    background-color: $bgc;
    color: $color;
    padding: $p;
    text-align: center;
    font-size: $fos;
    border: none;
    border-radius: $bo-radius;
    -webkit-transition: box-shadow 0.2s ease-out, background-color 0.2s;
    -moz-transition: box-shadow 0.2s ease-out, background-color 0.2s;
    -o-transition: box-shadow 0.2s ease-out, background-color 0.2s;
    transition: box-shadow 0.2s ease-out, background-color 0.2s;
    cursor: $cursor;
    text-decoration: none;
    &:focus {
        outline: $outline-foucs;
    }
}

@mixin make-bn-close($float, $bgc, $bo-radius, $color) {
    float: $float;
    background-color: $bgc;
    border-radius: $bo-radius;
    border: none;
    color: $color;
    -webkit-transition: border-color 0.2s, box-shadow 0.2s ease-out, background-color 0.2s;
    -moz-transition: border-color 0.2s, box-shadow 0.2s ease-out, background-color 0.2s;
    -o-transition: border-color 0.2s, box-shadow 0.2s ease-out, background-color 0.2s;
    transition: border-color 0.2s, box-shadow 0.2s ease-out, background-color 0.2s;
    @if ($float == left) {
        $float: right;
        &:lang(ar) {
            float: $float;
        }
    } @else if ($float == right) {
        $float: left;
        &:lang(ar) {
            float: $float;
        }
    }
    &:focus {
        outline: none;
    }
}

// buttons & links color :
@mixin make-buttons-colors($class1, $class2, $bgc, $color-active) {
    // bn-color :
    #{$class1} {
        border: 1.8px solid $bgc;
        background-color: $bgc;
        @include if-color($bgc);
        box-shadow: none;
        &:hover {
            background-color: $bgc + db;
        }
        &:focus {
            background-color: $bgc;
            -webkit-box-shadow: 0px 0px 0px 3px $color-active;
            -moz-box-shadow: 0px 0px 0px 3px $color-active;
            box-shadow: 0px 0px 0px 3px $color-active;
        }
    }
    // outline-color:
    #{$class2} {
        background-color: transparent;
        border: 1.8px solid $bgc;
        color: $bgc;
        box-shadow: none;
        &:hover {
            background-color: $bgc;
            @include if-color($bgc);
        }
        &:focus {
            -webkit-box-shadow: 0px 0px 0px 3px $color-active;
            -moz-box-shadow: 0px 0px 0px 3px $color-active;
            box-shadow: 0px 0px 0px 3px $color-active;
        }
    }
}

@mixin make-bn-group($bo-radius-first-of-type, $bo-radius-last-of-type, $dir) {
    @if $dir == hr {
        $dir: row;
        @include make-flex-dir($dir);
    } @else {
        width: max-content;
        $dir: column;
        @include make-flex-dir($dir);
    }
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    > button,
    [type="button"],
    [type="reset"],
    [type="submit"] {
        border-radius: 0px;
        &:focus {
            z-index: 2;
        }
        &:first-of-type {
            border-radius: $bo-radius-first-of-type;
        }
        &:last-of-type {
            border-radius: $bo-radius-last-of-type;
        }
    }
}

// class :
@mixin make-class($class, $class-2, $class-3) {
    .#{$class}#{$class-2}#{$class-3} {
        @content;
    }
}

@mixin make-bns-sizes($bn, $fos) {
    min-width: $bn;
    height: auto;
    font-size: $fos;
    padding: (($bn / $bn-ptb-md) ($bn / $bn-prl-md));
}

@mixin make-ball($circle, $fos) {
    min-width: $circle;
    border-radius: $circle;
    font-size: $fos;
    padding: ($circle / 3);
}

@mixin make-pill($pill, $fos) {
    min-width: $pill;
    padding: (($pill / $bn-ptb-md + 2px) ($pill / $bn-prl-md));
    font-size: $fos;
    border-radius: $pill;
}

@mixin make-buttons-size($size-name, $size-item, $fos, $add-inclass) {
    .ball-#{$size-name}#{$add-inclass} {
        @include make-ball($size-item, $fos);
    }
    .pill-#{$size-name}#{$add-inclass} {
        @include make-pill($size-item, $fos);
    }
    /* bn */
    .bn-#{$size-name}#{$add-inclass} {
        @include make-bns-sizes($size-item, $fos);
    }
    /* bn-group */
    .bn-group-#{$size-name}#{$add-inclass} {
        > button {
            @include make-bns-sizes($size-item, $fos);
        }
    }
}
